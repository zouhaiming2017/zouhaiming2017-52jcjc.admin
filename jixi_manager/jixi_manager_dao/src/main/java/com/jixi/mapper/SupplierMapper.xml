<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jixi.mapper.SupplierMapper">
  <resultMap id="BaseResultMap" type="com.jixi.pojo.Supplier">
    <id column="supplierCode" jdbcType="VARCHAR" property="suppliercode" />
    <result column="supplierName" jdbcType="VARCHAR" property="suppliername" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="taxPoint" jdbcType="VARCHAR" property="taxpoint" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="Vip" jdbcType="VARCHAR" property="vip" />
    <result column="supplierIndex" jdbcType="VARCHAR" property="supplierindex" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    supplierCode, supplierName, linkman, phone, taxPoint, address, Vip, supplierIndex
  </sql>
  <select id="selectByExample" parameterType="com.jixi.pojo.SupplierExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from supplier
    where supplierCode = #{suppliercode,jdbcType=VARCHAR}
  </select>

  <select id="selectDistinctAddress" resultMap="BaseResultMap">
    select distinct address from supplier
  </select>

  <select id="selectDistinctVip" resultMap="BaseResultMap">
    select distinct Vip from supplier
  </select>

  <select id="selectDistinctSupplierIndex" resultMap="BaseResultMap">
    select distinct supplierIndex from supplier
  </select>

  <select id="like" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from supplier
    <where>
      <if test="address!=null">
        and address=#{address,jdbcType=VARCHAR}
      </if>
      <if test="vip!=null">
        and Vip= #{vip,jdbcType=VARCHAR}
      </if>
      <if test="supplierindex!=null">
        and supplierIndex= #{supplierindex,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from supplier
    where supplierCode = #{suppliercode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jixi.pojo.SupplierExample">
    delete from supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jixi.pojo.Supplier">
    insert into supplier (supplierCode, supplierName, linkman, 
      phone, taxPoint, address, 
      Vip, supplierIndex)
    values (#{suppliercode,jdbcType=VARCHAR}, #{suppliername,jdbcType=VARCHAR}, #{linkman,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{taxpoint,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{vip,jdbcType=VARCHAR}, #{supplierindex,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jixi.pojo.Supplier">
    insert into supplier
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="suppliercode != null">
        supplierCode,
      </if>
      <if test="suppliername != null">
        supplierName,
      </if>
      <if test="linkman != null">
        linkman,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="taxpoint != null">
        taxPoint,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="vip != null">
        Vip,
      </if>
      <if test="supplierindex != null">
        supplierIndex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="suppliercode != null">
        #{suppliercode,jdbcType=VARCHAR},
      </if>
      <if test="suppliername != null">
        #{suppliername,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="taxpoint != null">
        #{taxpoint,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="vip != null">
        #{vip,jdbcType=VARCHAR},
      </if>
      <if test="supplierindex != null">
        #{supplierindex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jixi.pojo.SupplierExample" resultType="java.lang.Long">
    select count(*) from supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update supplier
    <set>
      <if test="record.suppliercode != null">
        supplierCode = #{record.suppliercode,jdbcType=VARCHAR},
      </if>
      <if test="record.suppliername != null">
        supplierName = #{record.suppliername,jdbcType=VARCHAR},
      </if>
      <if test="record.linkman != null">
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.taxpoint != null">
        taxPoint = #{record.taxpoint,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.vip != null">
        Vip = #{record.vip,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierindex != null">
        supplierIndex = #{record.supplierindex,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update supplier
    set supplierCode = #{record.suppliercode,jdbcType=VARCHAR},
      supplierName = #{record.suppliername,jdbcType=VARCHAR},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      taxPoint = #{record.taxpoint,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      Vip = #{record.vip,jdbcType=VARCHAR},
      supplierIndex = #{record.supplierindex,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jixi.pojo.Supplier">
    update supplier
    <set>
      <if test="suppliername != null">
        supplierName = #{suppliername,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="taxpoint != null">
        taxPoint = #{taxpoint,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="vip != null">
        Vip = #{vip,jdbcType=VARCHAR},
      </if>
      <if test="supplierindex != null">
        supplierIndex = #{supplierindex,jdbcType=VARCHAR},
      </if>
    </set>
    where supplierCode = #{suppliercode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jixi.pojo.Supplier">
    update supplier
    set supplierName = #{suppliername,jdbcType=VARCHAR},
      linkman = #{linkman,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      taxPoint = #{taxpoint,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      Vip = #{vip,jdbcType=VARCHAR},
      supplierIndex = #{supplierindex,jdbcType=VARCHAR}
    where supplierCode = #{suppliercode,jdbcType=VARCHAR}
  </update>
</mapper>